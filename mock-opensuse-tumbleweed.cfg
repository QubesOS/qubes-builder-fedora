# global options
config_opts['cache_topdir'] = os.environ['CACHEDIR']
config_opts['basedir'] = os.environ['CHROOT_DIR'] + '/mock'
config_opts['use_bootstrap_container'] = False

config_opts['root'] = 'opensuse-tumbleweed-x86_64'
config_opts['target_arch'] = 'x86_64'
config_opts['legal_host_arches'] = ('x86_64',)
config_opts['chroot_setup_cmd'] = 'install patterns-devel-base-devel_rpm_build python-rpm-macros'
config_opts['dist'] = 'tumbleweed'
config_opts['extra_chroot_dirs'] = [ '/run/lock', ]
config_opts['useradd'] = '/usr/sbin/useradd -o -m -u {{chrootuid}} -g {{chrootgid}} -d {{chroothome}} {{chrootuser}}'
config_opts['releasever'] = '0'
config_opts['package_manager'] = 'dnf'
config_opts['nosync'] = True
config_opts['nosync_force'] = True
config_opts['macros']['%dist'] = '.suse.tw'
config_opts['macros']['source_date_epoch_from_changelog'] = 'Y'
config_opts['macros']['clamp_mtime_to_source_date_epoch'] = 'Y'
config_opts['macros']['use_source_date_epoch_as_buildtime'] = 'Y'
config_opts['macros']['_buildhost'] = 'reproducible'

# Due to the nature of the OpenSUSE mirroring system, we can not use
# metalinks easily and also we can not rely on the fact that baseurl's
# always work (issue #553) -- by design we need to expect a one minute
# repository problems (configured four attempts means 3 periods of 20s).
config_opts['package_manager_max_attempts'] = 4
config_opts['package_manager_attempt_delay'] = 20


config_opts['dnf.conf'] = """
[main]
keepcache=1
debuglevel=2
reposdir=/dev/null
logfile=/var/log/yum.log
retries=20
obsoletes=1
gpgcheck=0
assumeyes=1
syslog_ident=mock
syslog_device=
install_weak_deps=0
metadata_expire=0
mdpolicy=group:primary
best=1
excludepkgs=*.i586,*.i686
protected_packages=
user_agent={{ user_agent }}

# repos

[opensuse-tumbleweed-oss]
name=openSUSE Tumbleweed - x86_64 - OSS
baseurl=http://download.opensuse.org/tumbleweed/repo/oss/
#metalink=http://download.opensuse.org/tumbleweed/repo/oss/repodata/repomd.xml.metalink
gpgkey=file:///usr/share/distribution-gpg-keys/opensuse/RPM-GPG-KEY-openSUSE
gpgcheck=1
repo_gpgcheck=1

[builder-local]
name=builder-local
baseurl=file://{builder_repo_dir}
gpgcheck=0
repo_gpgcheck=0
exclude=qubes-release
skip_if_unavailable=0
""".format(
        package_set=os.environ['PACKAGE_SET'],
        qubes_version=os.environ['USE_QUBES_REPO_VERSION'],
        keys_dir=(os.environ['RPM_PLUGIN_DIR'] + '/keys'),
        builder_repo_dir=os.environ['BUILDER_REPO_DIR'],
        )